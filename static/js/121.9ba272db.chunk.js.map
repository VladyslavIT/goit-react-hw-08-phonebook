{"version":3,"file":"static/js/121.9ba272db.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/OneContact/OneContact.styled.jsx","components/OneContact/OneContact.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Main/Main.styled.jsx","components/Main/Main.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderThumb = styled.div`\n margin-left: auto;\n`;","import { Oval } from 'react-loader-spinner';\n\nimport { LoaderThumb } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Oval\n      height={40}\n      width={40}\n      color=\"red\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"black\"\n      strokeWidth={3}\n      strokeWidthSecondary={3}\n    />\n  );\n};\n\nconst LoaderDelete = () => {\n  return (\n      <LoaderThumb>\n    <Oval\n      height={15}\n      width={20}\n      color=\"red\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"black\"\n      strokeWidth={3}\n      strokeWidthSecondary={3}\n      />\n      </LoaderThumb>\n  );\n}\nexport { Loader, LoaderDelete };\n","import styled from '@emotion/styled';\n\nexport const FormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  margin-bottom: 36px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 25px;\n  margin-right: auto;\n  font-size: large;\n  margin-bottom: 6px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 24px;\n  border-radius: 4px;\n  border: none;\n\n  font-weight: bold;\n  margin-bottom: 24px;\n`;\nexport const ButtonForm = styled.button`\n  padding: 8px 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: inherit;\n  &:hover {\n    background-color: greenyellow;\n  }\n`;\n","import React from 'react';\nimport Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useGetContactsQuery } from 'redux/contactSlice';\nimport { useAddContactMutation } from 'redux/contactSlice';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { FormEl, Label, Input, ButtonForm } from './Form.styled';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading, isSuccess }] = useAddContactMutation();\n\n  const numberInputId = nanoid();\n  const nameInputId = nanoid();\n\n  useEffect(() => {\n    if (isSuccess) {\n      Notiflix.Notify.success(`Contact added successfully`);\n      reset();\n    }\n  }, [isSuccess]);\n\n  const inputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    const stateName = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (stateName) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n      return;\n    } else {\n      addContact(newContact);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>Name </Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        id={nameInputId}\n        value={name}\n        onChange={inputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Label htmlFor={numberInputId}>Phone </Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        id={numberInputId}\n        value={number}\n        onChange={inputChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ButtonForm type=\"submit\">Add Contact</ButtonForm>\n      )}\n    </FormEl>\n  );\n};\n\nexport { Form };\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  padding: 8px;\n  border-bottom: 1px solid black;\n\n  &::before {\n    content: '-';\n    padding-right: 8px;\n  }\n`;\n\nexport const ListButton = styled.button`\n  margin-left: auto;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    border: none;\n    background-color: #f52f2f;\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport { useEffect } from 'react';\nimport { useDeleteContactMutation } from 'redux/contactSlice';\nimport { LoaderDelete } from 'components/Loader/Loader';\nimport { ListItem, ListButton } from './OneContact.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading, isSuccess }] = useDeleteContactMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      Notiflix.Notify.info(`Contact has been deleted`);\n    }\n  }, [isSuccess]);\n\n  return (\n    <ListItem key={id}>\n      {name}: {number}\n      {isLoading ? (\n        <LoaderDelete />\n      ) : (\n        <ListButton onClick={() => deleteContact(id)}>Delete</ListButton>\n      )}\n    </ListItem>\n  );\n};\n\nexport { ContactItem };\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contactSlice';\nimport { ContactItem } from 'components/OneContact/OneContact';\n\nconst Contact = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter);\n\n  const contactShow = () => {\n    const toLower = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(toLower)\n    );\n  };\n\n  return (\n    <ul>\n      {contactShow().map(({ id, name, number }) => (\n        <ContactItem id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nexport { Contact };\n","import styled from '@emotion/styled';\n\nexport const FilterThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 12px;\n  align-items: center;\n`;\n\nexport const FilterLabel = styled.label`\n  text-align: center;\n  margin-bottom: 8px;\n`;\n\nexport const FilterInput = styled.input`\n  height: 18px;\n  font-weight: bold;\n  width: 250px;\n  border-radius: 4px;\n  border: none;\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nimport { FilterThumb, FilterLabel, FilterInput } from './Filter.styled';\n\nconst FilterName = () => {\n  const filterId = nanoid();\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filterChange = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <FilterThumb>\n      <FilterLabel htmlFor={filterId}>Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        id={filterId}\n        value={filter}\n        onChange={filterChange}\n      />\n    </FilterThumb>\n  );\n};\n\nexport { FilterName };\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 30px;\n  /* height: 100vh; */\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: yellow;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-evenly;\n  width: 90%;\n  background-color: inherit;\n  padding: 15px;\n`;\n\nexport const WrapperForm = styled.div``;\n\nexport const WrapperContatcts = styled.div`\n  width: 30%;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 24px;\n`;\n\nexport const TitleContacts = styled.h2`\n  text-align: center;\n  margin-bottom: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n`;","import React from 'react';\nimport { useGetContactsQuery } from 'redux/contactSlice';\nimport { Form } from '../Form/Form';\nimport { Contact } from '../Contacts/Contacts';\nimport { FilterName } from '../Filter/Filter';\nimport { Outlet } from 'react-router-dom';\n\nimport {\n  Container,\n  Section,\n  Title,\n  TitleContacts,\n  WrapperForm,\n  WrapperContatcts,\n  Text,\n} from './Main.styled';\n\n\nexport default function Main() {\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  return (\n    <>    <Container>\n      <Section>\n        <WrapperForm>\n          <Title>Phonebook</Title>\n          <Form />\n        </WrapperForm>\n        <WrapperContatcts>\n          <TitleContacts>Contacts</TitleContacts>\n          {contacts.length > 0 ? (\n            <>\n              {' '}\n              <FilterName />\n              <Contact />{' '}\n            </>\n          ) : (\n            <Text>You don't have contacts</Text>\n          )}\n        </WrapperContatcts>\n      </Section>\n    </Container>\n      <Outlet />\n      </>\n\n  );\n};\n\n"],"names":["LoaderThumb","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","LoaderDelete","FormEl","Label","Input","ButtonForm","Form","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","isSuccess","numberInputId","nanoid","nameInputId","useEffect","Notiflix","reset","inputChange","event","currentTarget","value","onSubmit","preventDefault","newContact","map","contact","toLowerCase","includes","htmlFor","type","id","onChange","pattern","title","required","ListItem","ListButton","ContactItem","useDeleteContactMutation","deleteContact","onClick","Contact","filter","useSelector","state","toLower","contactShow","FilterThumb","FilterLabel","FilterInput","FilterName","filterId","dispatch","useDispatch","setFilter","Container","Section","WrapperForm","WrapperContatcts","Title","TitleContacts","Text","Main","length"],"sourceRoot":""}